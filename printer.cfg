# This file contains common configurations and pin mappings for the Prusa
# Mini+, which uses the Prusa Buddy board.
[include mainsail.cfg]
# To use this config, the firmware should be compiled for the STM32F407. Run
# "make menuconfig" and set the following parameters:
# - check "Enable extra low-level configuration options"
# - set "Microcontroller Architecture" to "STMicroelectronics STM32"
# - set "Bootloader offset" to "128KiB + 512 byte offset"
# - set "Clock Reference" to "12 MHz crystal"
# - set "Communication interface" to "USB (on PA11/PA12)"
# Connect the printer to your Raspberry Pi using the printer's micro-USB port.
# If you prefer to remove Prusa's stock bootloader entirely, select the
# "No bootloader" option.

# When flashing for the first time, you will need to break the "appendix"
# on the Buddy board, then put the device into DFU mode by moving the jumper
# on the 3-pin header (older boards) or shorting the 2-pin header (newer boards)
# and resetting, and finally use "make flash" to install Klipper. Once Klipper is
# installed, you no longer need the jumper - just use "make flash" which will
# automatically put the device into DFU mode.

# Note that if you were previously running Prusa firmware, you must fully
# power cycle the board after flashing. Otherwise, Klipper will be unable to
# communicate with the TMC2209s due to the abrupt change in the baud rate,
# and will show this error: "Unable to read tmc uart register IFCNT".

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PD1
dir_pin: PD0
enable_pin: !PD3
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 180.4
position_min: -2
position_max: 180.4
homing_speed: 50
homing_retract_dist: 0

[stepper_y]
step_pin: PD13
dir_pin: PD12
enable_pin: !PD14
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -3
position_min: -3
position_max: 180
homing_speed: 50
homing_retract_dist: 0

[stepper_z]
step_pin: PD4
dir_pin: !PD15
enable_pin: !PD2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: 0
position_max: 185

[extruder]
step_pin: PD9
dir_pin: !PD8
enable_pin: !PD10
microsteps: 8
rotation_distance: 23.421 #26.2564  # (200 * 16 * 48/18) / 325
gear_ratio: 80:20
full_steps_per_rotation: 400	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0
#control: pid
# Prusa's firmware defaults.
#pid_Kp: 7
#pid_Ki: 0.5
#pid_Kd: 45
min_temp: 10
max_temp: 305
pressure_advance = 0.64 #0.333
pressure_advance_smooth_time: 0.2

[tmc2209 stepper_x]
uart_pin: PD5
uart_address: 1
diag_pin: ^PE2
driver_SGTHRS: 130
run_current: 0.35
sense_resistor: 0.22
stealthchop_threshold: 999999
interpolate: True

[tmc2209 stepper_y]
uart_pin: PD5
uart_address: 3
diag_pin: ^PE1
driver_SGTHRS: 130
run_current: 0.35
sense_resistor: 0.22
stealthchop_threshold: 0 #999999
interpolate: True

[tmc2209 stepper_z]
uart_pin: PD5
uart_address: 0
diag_pin: ^PE3
driver_SGTHRS: 100
run_current: 0.35
sense_resistor: 0.22
stealthchop_threshold: 0
interpolate: True

[tmc2209 extruder]
uart_pin: PD5
uart_address: 2
diag_pin: ^PA15
driver_SGTHRS: 100
run_current: 0.6 #0.4
hold_current: 0.4
sense_resistor: 0.22
interpolate: False
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4
#control: pid
# Prusa's firmware defaults.
#pid_Kp: 120
#pid_Ki: 1.5
#pid_Kd: 600
min_temp: 10
max_temp: 110

# Hotend fan.
# The stock firmware uses control ranges of PWM 0-50%, RPM 1000-8000.
# Change fan_speed below to match your preference. Measured speeds:
#   fan_speed 0.5:  50% PWM = 4000RPM (Prusa stock default speed)
#   fan_speed 1.0: 100% PWM = 8000RPM (safe but loud)
[heater_fan hotend_fan]
pin: PE9
tachometer_pin: PE14
fan_speed: 0.5
shutdown_speed: 1.0

# Part cooling fan.
# The stock firmware uses control ranges of PWM 10-50%, RPM 500-5000.
# To match stock firmware, set the Klipper fan speed to 50%. This speed
# can be safely increased to 100% for better part cooling. Measured speeds:
#    50% PWM = 2500RPM (Prusa stock default speed)
#   100% PWM = 5000RPM (better cooling, still quiet)
[fan]
pin: PE11
tachometer_pin: PE10
kick_start_time: 0.150

# The SuperPINDA has built-in temperature compensation and no thermistor output,
# so no compensation table is needed here.
[probe]
pin: PA8
x_offset: -29
y_offset: -3
#z_offset: 1.0  # set this to your Live Z Offset, but negated (invert the sign)
speed: 6.0

[safe_z_home]
home_xy_position: 147.4,21.1
z_hop: 4

[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 135,167
probe_count: 4,4

[filament_switch_sensor filament_sensor]
switch_pin: ^PB4
pause_on_runout: True

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_4B001D000D504E5855323320-if00
restart_method: command

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[printer]
kinematics: cartesian
# Prusa firmware defaults.
max_velocity: 180
max_accel: 3000
max_z_velocity: 12
max_z_accel: 400
square_corner_velocity: 3.0

#[display]
#lcd_type: st7789v
#spi_bus: spi2a
#rst_pin: PC8
#cs_pin: PC9
#rs_pin: PD11
#encoder_pins: ^PE13, ^PE15
#click_pin: ^!PE12
[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 5,20
mesh_max: 150, 150
probe_count: 4,4

[skew_correction]

[input_shaper]
shaper_freq_x: 25.974  # frequency for the X mark of the test model
shaper_freq_y: 24.752  # frequency for the Y mark of the test model
shaper_type: mzv

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor controller_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#### GCODE

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro SETUP_PRINT]
default_parameter_BED_TEMP: 70 
default_parameter_EXTRUDER_TEMP: 250
gcode:
    M118 Homing...
    G28
    M118 Bed Mesh...
    BED_MESH_CALIBRATE
    M118 Offsets...
    #SET_OFFSETS

[gcode_macro PRINT_START]
default_parameter_BED_TEMP: 70 
default_parameter_EXTRUDER_TEMP: 250
gcode:
    SET_PA
    # Move nozzle into the ready position
    G90
    G1 Y2 X179 F4200
    #PRINT_START EXTRUDER_TEMP={material_print_temperature} BED_TEMP={material_bed_temperature}
    # Wait for nozzle and bed to hit their temps
    M109 S{EXTRUDER_TEMP} ; wait for extruder final temp
    M190 S{BED_TEMP} ; wait for bed final temp
    # # # # # # #
    # Purge Line
    # # # # # # # 
    G92 E0.0
    G1 X170 F1000
    G1 Z0.2 F720
    G1 X110 E8 F900
    G1 X40 E18 F900
    G92 E0 ;Reset Extruder
    M118 Printing...

[gcode_macro SET_PA]
default_parameter_BED_TEMP: 70 
gcode:
    {% if BED_TEMP == 50 %} #CoPA
        #SET_GCODE_OFFSET Z=-0.175
        SET_PRESSURE_ADVANCE ADVANCE=0.66
        M118 PA: 0.66...
    {% endif %}
    {% if BED_TEMP == 60 %} #PLA
        #SET_GCODE_OFFSET Z=-0.175
        SET_PRESSURE_ADVANCE ADVANCE=0.64
        M118 PA: 0.64...
    {% endif %}
    {% if BED_TEMP == 80 %} #PETG
        # SET_GCODE_OFFSET Z=-0.095
        # SET_GCODE_OFFSET Z=0.175
        SET_PRESSURE_ADVANCE ADVANCE=0.65
        M118 PA: 0.65...
    {% endif %}
    {% if BED_TEMP >= 100 %} #ABS
        #SET_GCODE_OFFSET Z=0.15
        SET_PRESSURE_ADVANCE ADVANCE=0.66
        M118 PA: 0.66...
    {% endif %}
    
[gcode_macro SET_OFFSETS]
gcode:
    SET_GCODE_OFFSET X=0.5 Y=0 Z=-0.120

[gcode_macro END_PRINT]
gcode:
    M118 Winding Down...
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # park print head and deliver result
    G90 ; use absolute positioning
    G1 X178 Y180 F4200 
    G90
    # Disable steppers
    M84
    M118 Complete!

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.131250, -0.035000, -0.021250, 0.033750
#*# 	  -0.055000, 0.053750, 0.061250, 0.148750
#*# 	  -0.015000, 0.061250, 0.062500, 0.081250
#*# 	  0.063750, 0.106250, 0.122500, 0.145000
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 4
#*# max_y = 149.99
#*# mesh_x_pps = 2
#*# max_x = 149.99
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.524
#*# pid_ki = 1.088
#*# pid_kd = 116.561
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.288
#*# pid_ki = 1.404
#*# pid_kd = 668.807
#*#
#*# [bed_mesh TEXTURED]
#*# version = 1
#*# points =
#*# 	-0.118750, 0.007500, -0.075000, -0.063750, -0.061250
#*# 	-0.048750, -0.001250, -0.010000, 0.001250, 0.032500
#*# 	-0.022500, 0.061250, 0.016250, 0.016250, 0.050000
#*# 	0.005000, 0.057500, 0.022500, 0.001250, 0.040000
#*# 	0.043750, 0.096250, 0.077500, 0.067500, 0.087500
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 150.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [probe]
#*# z_offset = 1.150
